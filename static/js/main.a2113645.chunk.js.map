{"version":3,"sources":["App.js","index.js"],"names":["App","useState","search","setSearch","results","setResults","searchInfo","setSearchInfo","handleSearch","e","a","preventDefault","endpoint","fetch","response","ok","Error","statusText","json","query","searchinfo","className","onSubmit","type","placeholder","value","onChange","target","totalhits","map","result","i","url","pageid","title","dangerouslySetInnerHTML","__html","snippet","href","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAwEeA,MAtEf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAGMC,EAAY,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,yDACnBD,EAAEE,iBACa,KAAXT,EAFe,wDAIbU,EAJa,kJAKqDV,GALrD,SAOIW,MAAMD,GAPV,WAObE,EAPa,QASLC,GATK,sBAUXC,MAAMF,EAASG,YAVJ,wBAaAH,EAASI,OAbT,QAabA,EAba,OAenBb,EAAWa,EAAKC,MAAMjB,QACtBK,EAAcW,EAAKC,MAAMC,YAhBN,4CAAH,sDAqBlB,OACE,sBAAKC,UAAU,MAAf,UACE,mCAEE,6CAEA,sBAAMA,UAAU,aAAaC,SAAUd,EAAvC,SACE,uBACEe,KAAK,SACLC,YAAY,2BACZC,MAAOvB,EACPwB,SAAU,SAAAjB,GAAC,OAAIN,EAAUM,EAAEkB,OAAOF,YAInCnB,EAAWsB,UAAa,iDAAoBtB,EAAWsB,aAAiB,6BAK7E,qBAAKP,UAAU,UAAf,SAEIjB,EAAQyB,KAAI,SAACC,EAAQC,GAEnB,IAAMC,EAAG,0CAAqCF,EAAOG,QACrD,OAEE,sBAAKZ,UAAU,SAAf,UACE,6BAAMS,EAAOI,QACb,mBAAGC,wBAAyB,CAAEC,OAAQN,EAAOO,WAC7C,mBAAGC,KAAMN,EAAKL,OAAO,SACnBY,IAAI,WADN,yBAH2BR,YCnD3CS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a2113645.chunk.js","sourcesContent":["import {  useState } from 'react'\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [searchInfo, setSearchInfo] = useState([])\n\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (search === '') return;\n\n    const endpoint = `https://en.wikipedia.org/w/api.php?action=query&list=search&\n      prop=info&inprop=url&utf8=&format=json&origin=*&srlimit=20&srsearch=${search}`;\n\n    const response = await fetch(endpoint);\n\n    if (!response.ok){\n      throw Error(response.statusText);\n    }\n\n    const json = await response.json();\n    \n    setResults(json.query.search);\n    setSearchInfo(json.query.searchinfo);\n\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header>\n\n        <h1>Wiki Seeker</h1>\n\n        <form className=\"search-box\" onSubmit={handleSearch}>\n          <input \n            type=\"search\" \n            placeholder=\"What are you looking for\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n          />\n        </form>\n\n        { (searchInfo.totalhits) ? <p>Search Results: {searchInfo.totalhits}</p> : 'No Search Results Found' }\n\n      </header>\n\n\n      <div className=\"results\">\n        {\n          results.map((result, i) => {\n\n            const url =`https://en.wikipedia.org/?curid=${result.pageid}`\n            return (\n\n              <div className=\"result\" key={i}>\n                <h3>{ result.title }</h3>\n                <p dangerouslySetInnerHTML={{ __html: result.snippet }}></p>\n                <a href={url} target=\"_blank\" \n                  rel=\"nofollow\">Read More</a>\n              </div>\n\n            )\n          })\n        }\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}